<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from p_mrivadeneira.urdf.xacro      | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="team_hunt_player">
  <!-- Init colour -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="light_black">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.4235294117647059 0.0392156862745098 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.8705882352941177 0.8117647058823529 0.7647058823529411 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!--  Team Hunt player colors-->
  <material name="Red">
    <color rgba="1.0 0 0 1.0"/>
  </material>
  <material name="Green">
    <color rgba="0 1.0 0 1.0"/>
  </material>
  <material name="Blue">
    <color rgba="0 0 1.0 1.0"/>
  </material>
  <gazebo reference="base_link">
    <!--    <material>Gazebo/DarkGrey</material>-->
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="antenna">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="left_arm">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="left_arm_base">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="right_arm">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="right_arm_base">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="wheel_left_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <!--    <material>Gazebo/FlatBlack</material>-->
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="wheel_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <!--    <material>Gazebo/FlatBlack</material>-->
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="caster_back_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="caster_back_left_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="imu_link">
    <sensor name="imu" type="imu">
      <always_on>true</always_on>
      <visualize>false</visualize>
    </sensor>
    <material>Gazebo/Grey</material>
  </gazebo>
  <!--  Bumper (Contact sensor)-->
  <gazebo reference="base_link">
    <sensor name="base_link" type="contact">
      <update_rate>1000.0</update_rate>
      <always_on>true</always_on>
      <contact>
        <collision>base_footprint_fixed_joint_lump__base_link_collision_collision</collision>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="base_link_contact_sensor_plugin">
        <bumperTopicName>contact</bumperTopicName>
        <frameName>world</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="turtlebot3_waffle_pi_controller">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <!--      <publishOdomTF>false</publishOdomTF>-->
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.287</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_imu.so" name="imu_plugin">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>
  <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor name="lds_lfcd_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_lds_lfcd_controller">
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!--link : https://www.raspberrypi.org/documentation/hardware/camera/-->
  <gazebo reference="camera_rgb_frame">
    <sensor name="Pi Camera" type="camera">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <camera>
        <horizontal_fov>1.085595</horizontal_fov>
        <image>
          <!--              <width>640</width>-->
          <!--              <height>480</height>-->
          <width>1200</width>
          <height>380</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.03</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_frame</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!--  Define links and joints-->
  <link name="base_footprint"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.010"/>
  </joint>
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="-0.064 0 0.0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/bases/waffle_pi_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <!--      <material name="light_black"/>-->
      <material name="Red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.064 0 0.047"/>
      <geometry>
        <box size="0.266 0.266 0.094"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.3729096e+00"/>
      <inertia ixx="8.7002718e-03" ixy="-4.7576583e-05" ixz="1.1160499e-04" iyy="8.6195418e-03" iyz="-3.5422299e-06" izz="1.4612727e-02"/>
    </inertial>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <origin rpy="-1.57 0 0" xyz="0.0 0.144 0.023"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheel_left_link">
    <visual>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/wheels/left_tire.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <!--      <material name="dark"/>-->
      <material name="Red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.033"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="2.8498940e-02"/>
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09" iyy="1.1192413e-05" iyz="-1.4400107e-11" izz="2.0712558e-05"/>
    </inertial>
  </link>
  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <origin rpy="-1.57 0 0" xyz="0.0 -0.144 0.023"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheel_right_link">
    <visual>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/wheels/right_tire.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <!--      <material name="dark"/>-->
      <material name="Red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.033"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="2.8498940e-02"/>
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09" iyy="1.1192413e-05" iyz="-1.4400107e-11" izz="2.0712558e-05"/>
    </inertial>
  </link>
  <joint name="caster_back_right_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_back_right_link"/>
    <origin rpy="-1.57 0 0" xyz="-0.177 -0.064 -0.004"/>
  </joint>
  <link name="caster_back_right_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0.001 0"/>
      <geometry>
        <box size="0.030 0.009 0.020"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.005"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_back_left_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_back_left_link"/>
    <origin rpy="-1.57 0 0" xyz="-0.177 0.064 -0.004"/>
  </joint>
  <link name="caster_back_left_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0.001 0"/>
      <geometry>
        <box size="0.030 0.009 0.020"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.005"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.068"/>
  </joint>
  <link name="imu_link"/>
  <joint name="scan_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_scan"/>
    <origin rpy="0 0 0" xyz="-0.064 0 0.122"/>
  </joint>
  <link name="base_scan">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/sensors/lds.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.015 0 -0.0065"/>
      <geometry>
        <cylinder length="0.0315" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.114"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.073 -0.011 0.084"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0.005 0.011 0.013"/>
      <geometry>
        <box size="0.015 0.030 0.027"/>
      </geometry>
    </collision>
  </link>
  <joint name="camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.003 0.011 0.009"/>
    <parent link="camera_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame"/>
  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57 0 -1.57" xyz="0 0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
  </joint>
  <link name="camera_rgb_optical_frame"/>
  <!--base_link to antenna-->
  <link name="antenna">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.15" radius="0.005"/>
      </geometry>
    </visual>
  </link>
  <joint name="base_link_to_antenna" type="fixed">
    <origin rpy="0 0 0" xyz="0.05 0 0.16"/>
    <parent link="base_link"/>
    <child link="antenna"/>
  </joint>
  <!--Left arm-->
  <link name="left_arm_base">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.02"/>
      </geometry>
    </visual>
  </link>
  <joint name="base_link_to_left_arm_base" type="fixed">
    <origin rpy="0 0 0" xyz="0.04 -0.095 0.11"/>
    <parent link="base_link"/>
    <child link="left_arm_base"/>
  </joint>
  <link name="left_arm">
    <visual>
      <origin rpy="0 0 0" xyz="0 -0.1 0"/>
      <geometry>
        <box size="0.04 0.2 0.050"/>
      </geometry>
    </visual>
  </link>
  <joint name="left_arm_base_to_left_arm" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="left_arm_base"/>
    <child link="left_arm"/>
  </joint>
  <!--  <joint name="left_arm_base_to_left_arm" type="revolute">-->
  <!--    <axis xyz="0 0 1"/>-->
  <!--    <limit effort="1000.0" lower="0.0" upper="1.57" velocity="0.5"/>-->
  <!--    <origin rpy="0 0 0" xyz="0 0 1"/>-->
  <!--    <parent link="left_arm_base"/>-->
  <!--    <child link="left_arm"/>-->
  <!--  </joint>-->
  <!--Right arm-->
  <link name="right_arm_base">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.02"/>
      </geometry>
    </visual>
  </link>
  <joint name="base_link_to_right_arm_base" type="fixed">
    <origin rpy="0 0 0" xyz="0.04 0.095 0.11"/>
    <parent link="base_link"/>
    <child link="right_arm_base"/>
  </joint>
  <link name="right_arm">
    <visual>
      <origin rpy="0 0 0" xyz="0 0.1 0"/>
      <geometry>
        <box size="0.04 0.2 0.050"/>
      </geometry>
    </visual>
  </link>
  <joint name="left_arm_base_to_right_arm" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="right_arm_base"/>
    <child link="right_arm"/>
  </joint>
  <!--  <joint name="left_arm_base_to_left_arm" type="revolute">-->
  <!--    <axis xyz="0 0 1"/>-->
  <!--    <limit effort="1000.0" lower="0.0" upper="1.57" velocity="0.5"/>-->
  <!--    <origin rpy="0 0 0" xyz="0 0 1"/>-->
  <!--    <parent link="left_arm_base"/>-->
  <!--    <child link="left_arm"/>-->
  <!--  </joint>-->
</robot>

