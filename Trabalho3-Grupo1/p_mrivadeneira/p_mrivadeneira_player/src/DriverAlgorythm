max_linear = 2
min_linear = 0.25
error_ang = 0
error_ang_prev = 0
kp = 0.0005
kd = 0.00025

# -------------------------------------
# ATTACK MODE
# -------------------------------------

if target_position == 0:            # There is no target, so continue rotating until you get a target
    lin = 0
    if self.last_target_position_left == True:      # If the last target was at the right, then rotate right. Otherwise, rotate left.
        ang = 1
    else:
        ang = -1

else:
    lin += 0.025

    if lin > max_linear:            # Saturate velocity
        lin = max_linear
    if lin < min_linear:
        lin = min_linear

    error_ang = (600 - target_position)
    if abs(error_ang) > 585:        # Reduction of rotational value when target founded
        lin = 0
        if error_ang > 0:
            ang = 0.25
        else:
            ang = -0.25
    else:
        ang = kp*error_ang + kd*(error_ang - error_ang_prev)/2      # Angular value PD controlled

    if target_position <= 600:           # Remember the last side where the target was
        self.last_target_position_left = True
    else:
        self.last_target_position_left = False


# -------------------------------------
# BREATHING MODE
# -------------------------------------


if not self.flag_near_wall:
    lin = 1
    ang = 0
else:
    lin = 0
    # if self.near_wall_coords[0] < -0.1:
    if self.near_wall_coords[1] > 0:
        ang = -1
    else:
        ang = 1